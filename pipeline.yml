---
groups:
- name: all
  jobs:
  - build-accounts
  - test-accounts
  - stage-accounts
  - ship-accounts
  - prod-accounts
  - patch-accounts
  - major-accounts
  - minor-accounts
- name: accounts
  jobs:
  - build-accounts
  - test-accounts
  - stage-accounts
  - ship-accounts
  - prod-accounts
  - patch-accounts
  - major-accounts
  - minor-accounts

maven-params: &maven-params
  MAVEN_OPTS: {{maven-opts}}
  MAVEN_CONFIG: {{maven-config}}
  MAVEN_REPO_MIRROR: {{maven-mirror-url}}
  MAVEN_REPO_USERNAME: {{maven-mirror-username}}
  MAVEN_REPO_PASSWORD: {{maven-mirror-password}}

jobs:
- name: build-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      trigger: true
    - get: version
      resource: accounts-version
      params: {pre: rc}
  - task: build
    file: pipeline-tasks/build-maven-semver/task.yml
    params:
      <<: *maven-params
  - put: accounts-milestone
    params:
      file: task-output/accounts-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: accounts-version
    params: { file: version/version }

- name: test-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [ build-accounts ]
    - get: accounts-version
      passed: [build-accounts]
    - get: artifact
      resource: accounts-milestone
      passed: [ build-accounts ]
      trigger: true
  - put: cf-create-org
    resource: cf-test
    params:
      create_org:
        org: {{cf-test-org}}
  - put: cf-create-space
    resource: cf-test
    params:
      create_space:
        org: {{cf-test-org}}
        space: {{cf-test-space}}
  - aggregate:
    - put: cf-create-db
      resource: cf-test
      params:
        create_service:
          org: {{cf-test-org}}
          space: {{cf-test-space}}
          service: {{cf-test-accounts-db-service}}
          plan: {{cf-test-accounts-db-plan}}
          service_instance: {{cf-test-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-test
      params:
        create_service:
          org: {{cf-test-org}}
          space: {{cf-test-space}}
          service: {{cf-test-config-server-service}}
          plan: {{cf-test-config-server-plan}}
          service_instance: {{cf-test-config-server-si}}
          configuration: {{cf-test-config-server-config}}
          wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-test
      params:
        create_service:
          org: {{cf-test-org}}
          space: {{cf-test-space}}
          service: {{cf-test-service-registry-service}}
          plan: {{cf-test-service-registry-plan}}
          service_instance: {{cf-test-service-registry-si}}
          configuration: {{cf-test-service-registry-config}}
          wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-test
      params:
        create_service:
          org: {{cf-test-org}}
          space: {{cf-test-space}}
          service: {{cf-test-circuit-breaker-dashboard-service}}
          plan: {{cf-test-circuit-breaker-dashboard-plan}}
          service_instance: {{cf-test-circuit-breaker-dashboard-si}}
          configuration: {{cf-test-circuit-breaker-dashboard-config}}
          wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-test-accounts-name}}
      CF_APP_HOST: {{cf-test-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-test-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
      CF_APP_ENV_VARS:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '[memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: {metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5}  }]'
  - put: cf-push
    resource: cf-test
    params:
      zero_downtime_push:
        org: {{cf-test-org}}
        space: {{cf-test-space}}
        manifest: task-output/manifest.yml
        current_app_name: {{cf-test-accounts-name}}
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-test-accounts-url}}

- name: stage-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [test-accounts]
    - get: accounts-version
      passed: [test-accounts]
    - get: artifact
      resource: accounts-milestone
      passed: [ test-accounts ]
      trigger: true
  - put: cf-create-org
    resource: cf-stage
    params:
      create_org:
        org: {{cf-stage-org}}
  - put: cf-create-space
    resource: cf-stage
    params:
      create_space:
        org: {{cf-stage-org}}
        space: {{cf-stage-space}}
  - aggregate:
    - put: cf-create-db
      resource: cf-stage
      params:
        create_service:
          org: {{cf-stage-org}}
          space: {{cf-stage-space}}
          service: {{cf-stage-accounts-db-service}}
          plan: {{cf-stage-accounts-db-plan}}
          service_instance: {{cf-stage-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-stage
      params:
        create_service:
          org: {{cf-stage-org}}
          space: {{cf-stage-space}}
          service: {{cf-stage-config-server-service}}
          plan: {{cf-stage-config-server-plan}}
          service_instance: {{cf-stage-config-server-si}}
          configuration: {{cf-stage-config-server-config}}
          wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-stage
      params:
        create_service:
          org: {{cf-stage-org}}
          space: {{cf-stage-space}}
          service: {{cf-stage-service-registry-service}}
          plan: {{cf-stage-service-registry-plan}}
          service_instance: {{cf-stage-service-registry-si}}
          configuration: {{cf-stage-service-registry-config}}
          wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-stage
      params:
        create_service:
          org: {{cf-stage-org}}
          space: {{cf-stage-space}}
          service: {{cf-stage-circuit-breaker-dashboard-service}}
          plan: {{cf-stage-circuit-breaker-dashboard-plan}}
          service_instance: {{cf-stage-circuit-breaker-dashboard-si}}
          configuration: {{cf-stage-circuit-breaker-dashboard-config}}
          wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-stage-accounts-name}}
      CF_APP_HOST: {{cf-stage-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-stage-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
      CF_APP_ENV_VARS:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '[memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: {metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5}  }]'
  - put: cf-push
    resource: cf-stage
    params:
      zero_downtime_push:
        org: {{cf-stage-org}}
        space: {{cf-stage-space}}
        manifest: task-output/manifest.yml
        current_app_name: {{cf-stage-accounts-name}}
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-stage-accounts-url}}

- name: ship-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: project
      resource: accounts-service
      passed: [stage-accounts]
    - get: accounts-milestone
      passed: [stage-accounts]
    - get: accounts-version
      passed: [stage-accounts]
      params: {bump: final}
  - put: accounts-release
    params:
      file: accounts-milestone/accounts-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: accounts-version
    params: {file: version/version}

- name: prod-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: artifact
      resource: accounts-release
      passed: [ship-accounts]
    - get: accounts-version
      passed: [ship-accounts]
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [ship-accounts]
  - put: cf-create-org
    resource: cf-prod
    params:
      create_org:
        org: {{cf-prod-org}}
  - put: cf-create-space
    resource: cf-prod
    params:
      create_space:
        org: {{cf-prod-org}}
        space: {{cf-prod-space}}
  - aggregate:
    - put: cf-create-db
      resource: cf-prod
      params:
        create_service:
          org: {{cf-prod-org}}
          space: {{cf-prod-space}}
          service: {{cf-prod-accounts-db-service}}
          plan: {{cf-prod-accounts-db-plan}}
          service_instance: {{cf-prod-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-prod
      params:
        create_service:
          org: {{cf-prod-org}}
          space: {{cf-prod-space}}
          service: {{cf-prod-config-server-service}}
          plan: {{cf-prod-config-server-plan}}
          service_instance: {{cf-prod-config-server-si}}
          configuration: {{cf-prod-config-server-config}}
          wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-prod
      params:
        create_service:
          org: {{cf-prod-org}}
          space: {{cf-prod-space}}
          service: {{cf-prod-service-registry-service}}
          plan: {{cf-prod-service-registry-plan}}
          service_instance: {{cf-prod-service-registry-si}}
          configuration: {{cf-prod-service-registry-config}}
          wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-prod
      params:
        create_service:
          org: {{cf-prod-org}}
          space: {{cf-prod-space}}
          service: {{cf-prod-circuit-breaker-dashboard-service}}
          plan: {{cf-prod-circuit-breaker-dashboard-plan}}
          service_instance: {{cf-prod-circuit-breaker-dashboard-si}}
          configuration: {{cf-prod-circuit-breaker-dashboard-config}}
          wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-prod-accounts-name}}
      CF_APP_HOST: {{cf-prod-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-prod-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
      CF_APP_ENV_VARS:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '[memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: {metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5}  }]'
  - put: cf-push
    resource: cf-prod
    params:
      zero_downtime_push:
        org: {{cf-prod-org}}
        space: {{cf-prod-space}}
        manifest: task-output/manifest.yml
        current_app_name: {{cf-prod-accounts-name}}
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-prod-accounts-url}}

- name: patch-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - get: accounts-version
    passed: [ship-accounts]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: accounts-version
    params: {file: version/version}

- name: major-accounts
  public: true
  serial_groups: [ accounts-version ]
  plan:
  - get: accounts-version
    params: { bump: major, pre: rc }
  - put: accounts-version
    params: { file: accounts-version/version }

- name: minor-accounts
  public: true
  serial_groups: [ accounts-version ]
  plan:
  - get: accounts-version
    params: { bump: minor, pre: rc }
  - put: accounts-version
    params: { file: accounts-version/version }

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-uri}}
    branch: {{pipeline-tasks-git-branch}}

- name: accounts-service
  type: git
  source:
    uri: {{accounts-service-git-uri}}
    branch: {{accounts-service-git-branch}}
    private_key: {{git-private-key}}

- name: accounts-version
  type: semver
  source:
    driver: git
    uri: {{accounts-version-git-uri}}
    branch: {{accounts-version-git-branch}}
    file: version
    initial_version: 1.0.0-rc.0
    private_key: {{git-private-key}}

- name: accounts-milestone
  type: maven-resource
  source:
    url: {{maven-milestone-url}}
    artifact: io.pivotal.bank:accounts:jar
    username: {{maven-milestone-username}}
    password: {{maven-milestone-password}}
    skip_cert_check: {{maven-milestone-skip-ssl}}

- name: accounts-release
  type: maven-resource
  source:
    url: {{maven-release-url}}
    artifact: io.pivotal.bank:accounts:jar
    username: {{maven-release-username}}
    password: {{maven-release-password}}
    skip_cert_check: {{maven-release-skip-ssl}}

- name: cf-test
  type: cf-cli-resource
  source:
    api: {{cf-test-api-url}}
    skip_cert_check: {{cf-test-skip-ssl}}
    username: {{cf-test-username}}
    password: {{cf-test-password}}

- name: cf-stage
  type: cf-cli-resource
  source:
    api: {{cf-stage-api-url}}
    skip_cert_check: {{cf-stage-skip-ssl}}
    username: {{cf-stage-username}}
    password: {{cf-stage-password}}

- name: cf-prod
  type: cf-cli-resource
  source:
    api: {{cf-prod-api-url}}
    skip_cert_check: {{cf-prod-skip-ssl}}
    username: {{cf-prod-username}}
    password: {{cf-prod-password}}

resource_types:
- name: maven-resource
  type: docker-image
  source:
    repository: patrickcrocker/maven-resource
    tag: 1.3.1

- name: cf-cli-resource
  type: docker-image
  source:
    repository: patrickcrocker/cf-cli-resource
    tag: 1.0.2-rc.3
