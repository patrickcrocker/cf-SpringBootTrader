---
groups:
- name: all
  jobs:
  # quotes
  - build-quotes
  - test-quotes
  - stage-quotes
  - ship-quotes
  - prod-quotes
  - patch-quotes
  - major-quotes
  - minor-quotes
  # accounts
  - build-accounts
  - test-accounts
  - stage-accounts
  - ship-accounts
  - prod-accounts
  - patch-accounts
  - major-accounts
  - minor-accounts
  # portfolio
  - build-portfolio
  - test-portfolio
  - stage-portfolio
  - ship-portfolio
  - prod-portfolio
  - patch-portfolio
  - major-portfolio
  - minor-portfolio
  # web
  - build-web
  - test-web
  - stage-web
  - ship-web
  - prod-web
  - patch-web
  - major-web
  - minor-web
- name: quotes
  jobs:
  - build-quotes
  - test-quotes
  - stage-quotes
  - ship-quotes
  - prod-quotes
  - patch-quotes
  - major-quotes
  - minor-quotes
- name: accounts
  jobs:
  - build-accounts
  - test-accounts
  - stage-accounts
  - ship-accounts
  - prod-accounts
  - patch-accounts
  - major-accounts
  - minor-accounts
- name: portfolio
  jobs:
  - build-portfolio
  - test-portfolio
  - stage-portfolio
  - ship-portfolio
  - prod-portfolio
  - patch-portfolio
  - major-portfolio
  - minor-portfolio
- name: web
  jobs:
  - build-web
  - test-web
  - stage-web
  - ship-web
  - prod-web
  - patch-web
  - major-web
  - minor-web

maven-params: &maven-params
  MAVEN_OPTS: {{maven-opts}}
  MAVEN_CONFIG: {{maven-config}}
  MAVEN_REPO_MIRROR: {{maven-mirror-url}}
  MAVEN_REPO_USERNAME: {{maven-mirror-username}}
  MAVEN_REPO_PASSWORD: {{maven-mirror-password}}

jobs:
- name: build-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: quotes-service
      trigger: true
    - get: version
      resource: quotes-version
      params: {pre: rc}
  - task: build
    file: pipeline-tasks/build-maven-semver/task.yml
    params:
      <<: *maven-params
  - put: quotes-milestone
    params:
      file: task-output/quotes-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: quotes-version
    params: { file: version/version }

- name: test-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: quotes-service
      passed: [ build-quotes ]
    - get: version
      resource: quotes-version
      passed: [build-quotes]
    - get: artifact
      resource: quotes-milestone
      passed: [ build-quotes ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-test
    params:
      commands:
      - command: create-space
      - command: create-org
  - aggregate:
    - put: cf-create-config-server
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-config-server-service}}
        plan: {{cf-test-config-server-plan}}
        service_instance: {{cf-test-config-server-si}}
        configuration: {{cf-test-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-service-registry-service}}
        plan: {{cf-test-service-registry-plan}}
        service_instance: {{cf-test-service-registry-si}}
        configuration: {{cf-test-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-circuit-breaker-dashboard-service}}
        plan: {{cf-test-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-test-circuit-breaker-dashboard-si}}
        configuration: {{cf-test-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-test-quotes-name}}
      CF_APP_HOST: {{cf-test-quotes-host}}
      CF_APP_PATH: quotes-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-test
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-test-quotes-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-test-quotes-url}}

- name: stage-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: quotes-service
      passed: [test-quotes]
    - get: version
      resource: quotes-version
      passed: [test-quotes]
    - get: artifact
      resource: quotes-milestone
      passed: [ test-quotes ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-stage
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-config-server
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-config-server-service}}
        plan: {{cf-stage-config-server-plan}}
        service_instance: {{cf-stage-config-server-si}}
        configuration: {{cf-stage-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-service-registry-service}}
        plan: {{cf-stage-service-registry-plan}}
        service_instance: {{cf-stage-service-registry-si}}
        configuration: {{cf-stage-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-circuit-breaker-dashboard-service}}
        plan: {{cf-stage-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-stage-circuit-breaker-dashboard-si}}
        configuration: {{cf-stage-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-stage-quotes-name}}
      CF_APP_HOST: {{cf-stage-quotes-host}}
      CF_APP_PATH: quotes-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-stage
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-stage-quotes-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-stage-quotes-url}}

- name: ship-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - aggregate:
    - get: project
      resource: quotes-service
      passed: [stage-quotes]
    - get: version
      resource: quotes-version
      passed: [stage-quotes]
      params: {bump: final}
    - get: quotes-milestone
      passed: [stage-quotes]
  - put: quotes-release
    params:
      file: quotes-milestone/quotes-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: quotes-version
    params: {file: version/version}

- name: prod-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: quotes-service
      passed: [ship-quotes]
    - get: version
      resource: quotes-version
      passed: [ship-quotes]
    - get: artifact
      resource: quotes-release
      passed: [ship-quotes]
  - put: cf-create-org-and-space
    resource: cf-prod
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-config-server
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-config-server-service}}
        plan: {{cf-prod-config-server-plan}}
        service_instance: {{cf-prod-config-server-si}}
        configuration: {{cf-prod-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-service-registry-service}}
        plan: {{cf-prod-service-registry-plan}}
        service_instance: {{cf-prod-service-registry-si}}
        configuration: {{cf-prod-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-circuit-breaker-dashboard-service}}
        plan: {{cf-prod-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-prod-circuit-breaker-dashboard-si}}
        configuration: {{cf-prod-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-prod-quotes-name}}
      CF_APP_HOST: {{cf-prod-quotes-host}}
      CF_APP_PATH: quotes-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-prod
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-prod-quotes-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-prod-quotes-url}}

- name: patch-quotes
  public: true
  serial_groups: [quotes-version]
  plan:
  - get: version
    resource: quotes-version
    passed: [ship-quotes]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: quotes-version
    params: {file: version/version}

- name: major-quotes
  public: true
  serial_groups: [ quotes-version ]
  plan:
  - get: version
    resource: quotes-version
    params: { bump: major, pre: rc }
  - put: quotes-version
    params: { file: version/version }

- name: minor-quotes
  public: true
  serial_groups: [ quotes-version ]
  plan:
  - get: version
    resource: quotes-version
    params: { bump: minor, pre: rc }
  - put: quotes-version
    params: { file: version/version }

- name: build-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      trigger: true
    - get: version
      resource: accounts-version
      params: {pre: rc}
  - task: build
    file: pipeline-tasks/build-maven-semver/task.yml
    params:
      <<: *maven-params
  - put: accounts-milestone
    params:
      file: task-output/accounts-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: accounts-version
    params: { file: version/version }

- name: test-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [ build-accounts ]
    - get: version
      resource: accounts-version
      passed: [build-accounts]
    - get: artifact
      resource: accounts-milestone
      passed: [ build-accounts ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-test
    params:
      commands:
      - command: create-space
      - command: create-org
  - aggregate:
    - put: cf-create-db
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-accounts-db-service}}
        plan: {{cf-test-accounts-db-plan}}
        service_instance: {{cf-test-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-config-server-service}}
        plan: {{cf-test-config-server-plan}}
        service_instance: {{cf-test-config-server-si}}
        configuration: {{cf-test-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-service-registry-service}}
        plan: {{cf-test-service-registry-plan}}
        service_instance: {{cf-test-service-registry-si}}
        configuration: {{cf-test-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-circuit-breaker-dashboard-service}}
        plan: {{cf-test-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-test-circuit-breaker-dashboard-si}}
        configuration: {{cf-test-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-test-accounts-name}}
      CF_APP_HOST: {{cf-test-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-test-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-test
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-test-accounts-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-test-accounts-url}}

- name: stage-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [test-accounts]
    - get: version
      resource: accounts-version
      passed: [test-accounts]
    - get: artifact
      resource: accounts-milestone
      passed: [ test-accounts ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-stage
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-db
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-accounts-db-service}}
        plan: {{cf-stage-accounts-db-plan}}
        service_instance: {{cf-stage-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-config-server-service}}
        plan: {{cf-stage-config-server-plan}}
        service_instance: {{cf-stage-config-server-si}}
        configuration: {{cf-stage-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-service-registry-service}}
        plan: {{cf-stage-service-registry-plan}}
        service_instance: {{cf-stage-service-registry-si}}
        configuration: {{cf-stage-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-circuit-breaker-dashboard-service}}
        plan: {{cf-stage-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-stage-circuit-breaker-dashboard-si}}
        configuration: {{cf-stage-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-stage-accounts-name}}
      CF_APP_HOST: {{cf-stage-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-stage-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-stage
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-stage-accounts-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-stage-accounts-url}}

- name: ship-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: project
      resource: accounts-service
      passed: [stage-accounts]
    - get: version
      resource: accounts-version
      passed: [stage-accounts]
      params: {bump: final}
    - get: accounts-milestone
      passed: [stage-accounts]
  - put: accounts-release
    params:
      file: accounts-milestone/accounts-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: accounts-version
    params: {file: version/version}

- name: prod-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: accounts-service
      passed: [ship-accounts]
    - get: version
      resource: accounts-version
      passed: [ship-accounts]
    - get: artifact
      resource: accounts-release
      passed: [ship-accounts]
  - put: cf-create-org-and-space
    resource: cf-prod
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-db
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-accounts-db-service}}
        plan: {{cf-prod-accounts-db-plan}}
        service_instance: {{cf-prod-accounts-db-si}}
    - put: cf-create-config-server
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-config-server-service}}
        plan: {{cf-prod-config-server-plan}}
        service_instance: {{cf-prod-config-server-si}}
        configuration: {{cf-prod-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-service-registry-service}}
        plan: {{cf-prod-service-registry-plan}}
        service_instance: {{cf-prod-service-registry-si}}
        configuration: {{cf-prod-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-circuit-breaker-dashboard-service}}
        plan: {{cf-prod-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-prod-circuit-breaker-dashboard-si}}
        configuration: {{cf-prod-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-prod-accounts-name}}
      CF_APP_HOST: {{cf-prod-accounts-host}}
      CF_APP_PATH: accounts-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-prod-accounts-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-prod
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-prod-accounts-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-prod-accounts-url}}

- name: patch-accounts
  public: true
  serial_groups: [accounts-version]
  plan:
  - get: version
    resource: accounts-version
    passed: [ship-accounts]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: accounts-version
    params: {file: version/version}

- name: major-accounts
  public: true
  serial_groups: [ accounts-version ]
  plan:
  - get: version
    resource: accounts-version
    params: { bump: major, pre: rc }
  - put: accounts-version
    params: { file: version/version }

- name: minor-accounts
  public: true
  serial_groups: [ accounts-version ]
  plan:
  - get: version
    resource: accounts-version
    params: { bump: minor, pre: rc }
  - put: accounts-version
    params: { file: version/version }

- name: build-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: portfolio-service
      trigger: true
    - get: version
      resource: portfolio-version
      params: {pre: rc}
  - task: build
    file: pipeline-tasks/build-maven-semver/task.yml
    params:
      <<: *maven-params
  - put: portfolio-milestone
    params:
      file: task-output/portfolio-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: portfolio-version
    params: { file: version/version }

- name: test-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: portfolio-service
      passed: [ build-portfolio ]
    - get: version
      resource: portfolio-version
      passed: [build-portfolio]
    - get: artifact
      resource: portfolio-milestone
      passed: [ build-portfolio ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-test
    params:
      commands:
      - command: create-space
      - command: create-org
  - aggregate:
    - put: cf-create-db
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-portfolio-db-service}}
        plan: {{cf-test-portfolio-db-plan}}
        service_instance: {{cf-test-portfolio-db-si}}
    - put: cf-create-config-server
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-config-server-service}}
        plan: {{cf-test-config-server-plan}}
        service_instance: {{cf-test-config-server-si}}
        configuration: {{cf-test-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-service-registry-service}}
        plan: {{cf-test-service-registry-plan}}
        service_instance: {{cf-test-service-registry-si}}
        configuration: {{cf-test-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-circuit-breaker-dashboard-service}}
        plan: {{cf-test-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-test-circuit-breaker-dashboard-si}}
        configuration: {{cf-test-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-test-portfolio-name}}
      CF_APP_HOST: {{cf-test-portfolio-host}}
      CF_APP_PATH: portfolio-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-test-portfolio-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-test
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-test-portfolio-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-test-portfolio-url}}

- name: stage-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: portfolio-service
      passed: [test-portfolio]
    - get: version
      resource: portfolio-version
      passed: [test-portfolio]
    - get: artifact
      resource: portfolio-milestone
      passed: [ test-portfolio ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-stage
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-db
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-portfolio-db-service}}
        plan: {{cf-stage-portfolio-db-plan}}
        service_instance: {{cf-stage-portfolio-db-si}}
    - put: cf-create-config-server
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-config-server-service}}
        plan: {{cf-stage-config-server-plan}}
        service_instance: {{cf-stage-config-server-si}}
        configuration: {{cf-stage-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-service-registry-service}}
        plan: {{cf-stage-service-registry-plan}}
        service_instance: {{cf-stage-service-registry-si}}
        configuration: {{cf-stage-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-circuit-breaker-dashboard-service}}
        plan: {{cf-stage-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-stage-circuit-breaker-dashboard-si}}
        configuration: {{cf-stage-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-stage-portfolio-name}}
      CF_APP_HOST: {{cf-stage-portfolio-host}}
      CF_APP_PATH: portfolio-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-stage-portfolio-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-stage
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-stage-portfolio-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-stage-portfolio-url}}

- name: ship-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - aggregate:
    - get: project
      resource: portfolio-service
      passed: [stage-portfolio]
    - get: version
      resource: portfolio-version
      passed: [stage-portfolio]
      params: {bump: final}
    - get: portfolio-milestone
      passed: [stage-portfolio]
  - put: portfolio-release
    params:
      file: portfolio-milestone/portfolio-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: portfolio-version
    params: {file: version/version}

- name: prod-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: portfolio-service
      passed: [ship-portfolio]
    - get: version
      resource: portfolio-version
      passed: [ship-portfolio]
    - get: artifact
      resource: portfolio-release
      passed: [ship-portfolio]
  - put: cf-create-org-and-space
    resource: cf-prod
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-db
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-portfolio-db-service}}
        plan: {{cf-prod-portfolio-db-plan}}
        service_instance: {{cf-prod-portfolio-db-si}}
    - put: cf-create-config-server
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-config-server-service}}
        plan: {{cf-prod-config-server-plan}}
        service_instance: {{cf-prod-config-server-si}}
        configuration: {{cf-prod-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-service-registry-service}}
        plan: {{cf-prod-service-registry-plan}}
        service_instance: {{cf-prod-service-registry-si}}
        configuration: {{cf-prod-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-circuit-breaker-dashboard-service}}
        plan: {{cf-prod-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-prod-circuit-breaker-dashboard-si}}
        configuration: {{cf-prod-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-prod-portfolio-name}}
      CF_APP_HOST: {{cf-prod-portfolio-host}}
      CF_APP_PATH: portfolio-*.jar
      CF_APP_MEMORY: 640M
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [{{cf-prod-portfolio-db-si}}, discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-prod
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-prod-portfolio-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-prod-portfolio-url}}

- name: patch-portfolio
  public: true
  serial_groups: [portfolio-version]
  plan:
  - get: version
    resource: portfolio-version
    passed: [ship-portfolio]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: portfolio-version
    params: {file: version/version}

- name: major-portfolio
  public: true
  serial_groups: [ portfolio-version ]
  plan:
  - get: version
    resource: portfolio-version
    params: { bump: major, pre: rc }
  - put: portfolio-version
    params: { file: version/version }

- name: minor-portfolio
  public: true
  serial_groups: [ portfolio-version ]
  plan:
  - get: version
    resource: portfolio-version
    params: { bump: minor, pre: rc }
  - put: portfolio-version
    params: { file: version/version }

- name: build-web
  public: true
  serial_groups: [web-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: web-ui
      trigger: true
    - get: version
      resource: web-version
      params: {pre: rc}
  - task: build
    file: pipeline-tasks/build-maven-semver/task.yml
    params:
      <<: *maven-params
  - put: web-milestone
    params:
      file: task-output/web-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: web-version
    params: { file: version/version }

- name: test-web
  public: true
  serial_groups: [web-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: web-ui
      passed: [ build-web ]
    - get: version
      resource: web-version
      passed: [build-web]
    - get: artifact
      resource: web-milestone
      passed: [ build-web ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-test
    params:
      commands:
      - command: create-space
      - command: create-org
  - aggregate:
    - put: cf-create-config-server
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-config-server-service}}
        plan: {{cf-test-config-server-plan}}
        service_instance: {{cf-test-config-server-si}}
        configuration: {{cf-test-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-service-registry-service}}
        plan: {{cf-test-service-registry-plan}}
        service_instance: {{cf-test-service-registry-si}}
        configuration: {{cf-test-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-test
      params:
        command: create-service
        service: {{cf-test-circuit-breaker-dashboard-service}}
        plan: {{cf-test-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-test-circuit-breaker-dashboard-si}}
        configuration: {{cf-test-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-test-web-name}}
      CF_APP_HOST: {{cf-test-web-host}}
      CF_APP_PATH: web-*.jar
      CF_APP_MEMORY: 1G
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-test
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-test-web-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-test-web-url}}

- name: stage-web
  public: true
  serial_groups: [web-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: web-ui
      passed: [test-web]
    - get: version
      resource: web-version
      passed: [test-web]
    - get: artifact
      resource: web-milestone
      passed: [ test-web ]
      trigger: true
  - put: cf-create-org-and-space
    resource: cf-stage
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-config-server
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-config-server-service}}
        plan: {{cf-stage-config-server-plan}}
        service_instance: {{cf-stage-config-server-si}}
        configuration: {{cf-stage-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-service-registry-service}}
        plan: {{cf-stage-service-registry-plan}}
        service_instance: {{cf-stage-service-registry-si}}
        configuration: {{cf-stage-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-stage
      params:
        command: create-service
        service: {{cf-stage-circuit-breaker-dashboard-service}}
        plan: {{cf-stage-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-stage-circuit-breaker-dashboard-si}}
        configuration: {{cf-stage-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-stage-web-name}}
      CF_APP_HOST: {{cf-stage-web-host}}
      CF_APP_PATH: web-*.jar
      CF_APP_MEMORY: 1G
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-stage
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-stage-web-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-stage-web-url}}

- name: ship-web
  public: true
  serial_groups: [web-version]
  plan:
  - aggregate:
    - get: project
      resource: web-ui
      passed: [stage-web]
    - get: version
      resource: web-version
      passed: [stage-web]
      params: {bump: final}
    - get: web-milestone
      passed: [stage-web]
  - put: web-release
    params:
      file: web-milestone/web-*.jar
      pom_file: project/pom.xml
      version_file: version/version
  - put: web-version
    params: {file: version/version}

- name: prod-web
  public: true
  serial_groups: [web-version]
  plan:
  - aggregate:
    - get: pipeline-tasks
    - get: project
      resource: web-ui
      passed: [ship-web]
    - get: version
      resource: web-version
      passed: [ship-web]
    - get: artifact
      resource: web-release
      passed: [ship-web]
  - put: cf-create-org-and-space
    resource: cf-prod
    params:
      commands:
      - command: create-org
      - command: create-space
  - aggregate:
    - put: cf-create-config-server
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-config-server-service}}
        plan: {{cf-prod-config-server-plan}}
        service_instance: {{cf-prod-config-server-si}}
        configuration: {{cf-prod-config-server-config}}
        wait_for_service: true
    - put: cf-create-service-registry
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-service-registry-service}}
        plan: {{cf-prod-service-registry-plan}}
        service_instance: {{cf-prod-service-registry-si}}
        configuration: {{cf-prod-service-registry-config}}
        wait_for_service: true
    - put: cf-create-circuit-breaker-dashboard
      resource: cf-prod
      params:
        command: create-service
        service: {{cf-prod-circuit-breaker-dashboard-service}}
        plan: {{cf-prod-circuit-breaker-dashboard-plan}}
        service_instance: {{cf-prod-circuit-breaker-dashboard-si}}
        configuration: {{cf-prod-circuit-breaker-dashboard-config}}
        wait_for_service: true
  - task: generate-manifest
    file: pipeline-tasks/generate-manifest/task.yml
    params:
      CF_APP_NAME: {{cf-prod-web-name}}
      CF_APP_HOST: {{cf-prod-web-host}}
      CF_APP_PATH: web-*.jar
      CF_APP_MEMORY: 1G
      CF_APP_TIMEOUT: 180
      CF_APP_SERVICES: [discovery-service, circuit-breaker-dashboard, config-server]
  - put: cf-push
    resource: cf-prod
    params:
      command: zero-downtime-push
      manifest: task-output/manifest.yml
      current_app_name: {{cf-prod-web-name}}
      environment_variables:
        SPRING_PROFILES_ACTIVE: cloud
        JAVA_OPTS: -Djava.security.egd=file:///dev/urandom
        JBP_CONFIG_OPEN_JDK_JRE: '{ memory_calculator: { memory_sizes: { metaspace: 100m }, memory_heuristics: { metaspace: 10, heap: 65, native: 20, permgen: 10, stack: 5 } } }'
  - task: integration-tests
    file: pipeline-tasks/run-maven-itests/task.yml
    params:
      <<: *maven-params
      APP_URL: {{cf-prod-web-url}}

- name: patch-web
  public: true
  serial_groups: [web-version]
  plan:
  - get: version
    resource: web-version
    passed: [ship-web]
    params: {bump: patch, pre: rc}
    trigger: true
  - put: web-version
    params: {file: version/version}

- name: major-web
  public: true
  serial_groups: [ web-version ]
  plan:
  - get: version
    resource: web-version
    params: { bump: major, pre: rc }
  - put: web-version
    params: { file: version/version }

- name: minor-web
  public: true
  serial_groups: [ web-version ]
  plan:
  - get: version
    resource: web-version
    params: { bump: minor, pre: rc }
  - put: web-version
    params: { file: version/version }

resources:
- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-uri}}
    branch: {{pipeline-tasks-git-branch}}

- name: quotes-service
  type: git
  source:
    uri: {{quotes-service-git-uri}}
    branch: {{quotes-service-git-branch}}
    private_key: {{git-private-key}}

- name: quotes-version
  type: semver
  source:
    driver: git
    uri: {{quotes-version-git-uri}}
    branch: {{quotes-version-git-branch}}
    file: version
    initial_version: 1.0.0-rc.0
    private_key: {{git-private-key}}

- name: quotes-milestone
  type: maven-resource
  source:
    url: {{maven-milestone-url}}
    artifact: io.pivotal.bank:quotes:jar
    username: {{maven-milestone-username}}
    password: {{maven-milestone-password}}
    skip_cert_check: {{maven-milestone-skip-ssl}}

- name: quotes-release
  type: maven-resource
  source:
    url: {{maven-release-url}}
    artifact: io.pivotal.bank:quotes:jar
    username: {{maven-release-username}}
    password: {{maven-release-password}}
    skip_cert_check: {{maven-release-skip-ssl}}

- name: accounts-service
  type: git
  source:
    uri: {{accounts-service-git-uri}}
    branch: {{accounts-service-git-branch}}
    private_key: {{git-private-key}}

- name: accounts-version
  type: semver
  source:
    driver: git
    uri: {{accounts-version-git-uri}}
    branch: {{accounts-version-git-branch}}
    file: version
    initial_version: 1.0.0-rc.0
    private_key: {{git-private-key}}

- name: accounts-milestone
  type: maven-resource
  source:
    url: {{maven-milestone-url}}
    artifact: io.pivotal.bank:accounts:jar
    username: {{maven-milestone-username}}
    password: {{maven-milestone-password}}
    skip_cert_check: {{maven-milestone-skip-ssl}}

- name: accounts-release
  type: maven-resource
  source:
    url: {{maven-release-url}}
    artifact: io.pivotal.bank:accounts:jar
    username: {{maven-release-username}}
    password: {{maven-release-password}}
    skip_cert_check: {{maven-release-skip-ssl}}

- name: portfolio-service
  type: git
  source:
    uri: {{portfolio-service-git-uri}}
    branch: {{portfolio-service-git-branch}}
    private_key: {{git-private-key}}

- name: portfolio-version
  type: semver
  source:
    driver: git
    uri: {{portfolio-version-git-uri}}
    branch: {{portfolio-version-git-branch}}
    file: version
    initial_version: 1.0.0-rc.0
    private_key: {{git-private-key}}

- name: portfolio-milestone
  type: maven-resource
  source:
    url: {{maven-milestone-url}}
    artifact: io.pivotal.bank:portfolio:jar
    username: {{maven-milestone-username}}
    password: {{maven-milestone-password}}
    skip_cert_check: {{maven-milestone-skip-ssl}}

- name: portfolio-release
  type: maven-resource
  source:
    url: {{maven-release-url}}
    artifact: io.pivotal.bank:portfolio:jar
    username: {{maven-release-username}}
    password: {{maven-release-password}}
    skip_cert_check: {{maven-release-skip-ssl}}

- name: web-ui
  type: git
  source:
    uri: {{web-ui-git-uri}}
    branch: {{web-ui-git-branch}}
    private_key: {{git-private-key}}

- name: web-version
  type: semver
  source:
    driver: git
    uri: {{web-ui-version-git-uri}}
    branch: {{web-ui-version-git-branch}}
    file: version
    initial_version: 1.0.0-rc.0
    private_key: {{git-private-key}}

- name: web-milestone
  type: maven-resource
  source:
    url: {{maven-milestone-url}}
    artifact: io.pivotal.bank:web:jar
    username: {{maven-milestone-username}}
    password: {{maven-milestone-password}}
    skip_cert_check: {{maven-milestone-skip-ssl}}

- name: web-release
  type: maven-resource
  source:
    url: {{maven-release-url}}
    artifact: io.pivotal.bank:web:jar
    username: {{maven-release-username}}
    password: {{maven-release-password}}
    skip_cert_check: {{maven-release-skip-ssl}}

- name: cf-test
  type: cf-cli-resource
  source:
    api: {{cf-test-api-url}}
    skip_cert_check: {{cf-test-skip-ssl}}
    username: {{cf-test-username}}
    password: {{cf-test-password}}
    org: {{cf-test-org}}
    space: {{cf-test-space}}

- name: cf-stage
  type: cf-cli-resource
  source:
    api: {{cf-stage-api-url}}
    skip_cert_check: {{cf-stage-skip-ssl}}
    username: {{cf-stage-username}}
    password: {{cf-stage-password}}
    org: {{cf-stage-org}}
    space: {{cf-stage-space}}

- name: cf-prod
  type: cf-cli-resource
  source:
    api: {{cf-prod-api-url}}
    skip_cert_check: {{cf-prod-skip-ssl}}
    username: {{cf-prod-username}}
    password: {{cf-prod-password}}
    org: {{cf-prod-org}}
    space: {{cf-prod-space}}

resource_types:
- name: maven-resource
  type: docker-image
  source:
    repository: patrickcrocker/maven-resource
    tag: 1.3.1

- name: cf-cli-resource
  type: docker-image
  source:
    repository: patrickcrocker/cf-cli-resource
    tag: 1.2.1
